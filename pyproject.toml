[project]
name = "saxs"
version = "0.1.0"
description = "A Isai Gordeev saxs classification package"
authors = [
    { name = "Isai Gordeev", email = "isai.gordeev.2022@polytechnique.org" },
]
requires-python = ">=3.10"
readme = "README.md"
license = "MIT"
dependencies = [
    "numpy>=2.0.0,<3",
    "scipy>=1.14.0,<2",
    "tqdm>=4.66.4,<5",
    "pandas>=2.2.2,<3",
    "matplotlib>=3.9.14",
    "scikit-image>=0.24.0,<0.25",
    "uv>=0.8.18",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 79
indent-width = 4
target-version = "py311"
fix = true
unsafe-fixes = true

[tool.ruff.lint]
extend-select = [
    "E",
    "F",
    "I",
    "N",
    "W",
    "C",
    "UP",    # pyupgrade
    "N",     # PEP8 Naming
    "D",     # pydocstyle
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations errors and warnings
    "ASYNC", # flake8-async errors and warnings
    "S",     # flake8-bandit security warnings
    "BLE",   # flake8-blind-except errors
    "FBT",   # flake8-boolean-trap errors and warnings
    "B",     # flake8-bugbear warnings
    "A",     # flake8-builtins errors
    "COM",   # flake8-commas errors
    "C4",    # flake8-comprehensions warnings
    "T10",   # flake8-debugger errors
    "EM",    # flake8-errmsg errors
    "EXE",   # flake8-executable errors
    "FA",    # flake8-future-annotations errors
    "ISC",   # flake8-implicit-str-concat warnings
    "ICN",   # flake8-import-conventions errors and warnings
    "LOG",   # flake8-logging errors
    "G",     # flake8-logging-format warnings
    "INP",   # flake8-no-pep420 errors
    "PIE",   # flake8-pie errors and warnings
    "T20",   # flake8-print errors
    "PYI",   # flake8-pyi errors and warnings
    "PT",    # flake8-pytest-style errors and warnings
    "Q",     # flake8-quotes errors
    "RSE",   # flake8-raise errors
    "S",
    "SLF",   # flake8-self errors
    "RET",   # flake8-return errors
    "SLOT",  # flake8-slots errors
    "SIM",   # flake8-simplify errors and warnings
    "TID",   # flake8-tidy-imports errors
    "TCH",   # flake8-type-checking errors and warnings
    "INT",   # flake8-gettext errors and warnings
    "ARG",   # flake8-unused-arguments warnings
    "PTH",   # flake8-use-pathlib warnings
    "TD",    # flake8-todos warnings
    "FIX",   # flake8-fixme warnings
    "ERA",   # eradicate
    "PD",    # pandas-vet.
    "PGH",   # pygrep-hooks,
    "PL",    # pylint
    "R",     # Pylint refactor messages
    "TRY",   # tryceratops
    "FLY",   # flyint
    "NPY",   # numpy,
    "PERF",  # perflint # performance -> check @recap
    "FURB",  # refurb
    "RUF",   # ruff # check @translate
    "FAST",
    "W505",  # docstring style
] # errors, formatting, imports, namings, complexity
ignore = [
    "RUF100", # custom new lines with \
    "ANN204",
]

[tool.ruff.lint.pydocstyle]
# Configure docstring style checks
convention = "numpy"

[tool.ruff.lint.pycodestyle]
# Override the max doc line length rule (W505)
max-doc-length = 66

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "matplotlib>=3.9.1",
    "mypy>=1.18.2",
    "numpy>=2.0.0",
    "pandas>=2.2.2",
    "pyright>=1.1.406",
    "pytest>=8.4.2",
    "ruff>=0.13.1",
    "scikit-image>=0.24.0",
    "scipy>=1.14.0",
    "tqdm>=4.66.4",
    "uv>=0.8.18",
]

[tool.pyright]
typeCheckingMode = "strict" # enforce strict type checking on all annotated code
exclude = ["**/tests/**"]   # exclude test directories from type checking


[tool.mypy]
python_version = "3.11"
strict = true
exclude = "tests"
